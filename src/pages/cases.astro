---
import MainLayout from "../layouts/MainLayout.astro";
import Hero from "../components/organisms/Hero.astro";
import CardCases from "../components/molecules/CardCases.astro";

import cases from "../data/cases.json";
import AboutGallery from "../components/organisms/AboutGallery.astro";
import Filter from "../components/atoms/Filter.astro";
---

<MainLayout title="Cases | Twentyfour">
  <Hero variant="default" title="Cases" text="I mere end 10 år har vi hjulpet virksomheder med at løse digitale udfordringer – store som små. Vi elsker at finde løsninger, der faktisk virker – også når tingene bliver komplekse. " />
  <section class="py-32 grid gap-10">
    <header class="flex justify-between">
      <div id="filters" class="flex gap-4 py-2 px-8 bg-background-glass rounded-full border-2 border-border-primary">
        <Filter filter="design" />
        <Filter filter="webudvikling" />
        <Filter filter="integration" />
        <Filter filter="vedligeholdelse" />
        <button data-clear class="capitalize cursor-pointer px-1 hover:border-b-2 hover:border-b-brand-raspberry border-b-brand-raspberry focus-visible:outline-1 focus-visible:rounded-small disabled:text-text-secondary">Ryd</button>
      </div>
      <p>Søgefunktion</p>
    </header>
    <ul class="grid grid-cols-3 gap-x-5 gap-y-11 items-start">
      {cases.map((oneCase) => <CardCases filters={oneCase.services.join(",")} data={oneCase} variant={oneCase.thumbnail} />)}
      <!-- {cases.map((oneCase) => <CardCases filters={oneCase.services.join(",")} data={oneCase} variant={oneCase.thumbnail} />)} -->
    </ul>
    <footer class="grid place-content-center">
      <p>Pagination</p>
    </footer>
  </section>
</MainLayout>

<script>
  const filterButtons = document.querySelectorAll("[data-filter]");
  const clearButton = document.querySelector("[data-clear]");
  const cards = document.querySelectorAll(".case-card");

  let activeFilters = [];

  function updateView() {
    // Opdatere hvilke cards vises
    cards.forEach((card) => {
      const services = card.getAttribute("data-services").split(",");
      const match = activeFilters.length === 0 || activeFilters.some((f) => services.includes(f));

      if (match) {
        card.classList.remove("hidden");
      } else {
        card.classList.add("hidden");
      }
    });

    // Opdater knappernes aktive styling
    filterButtons.forEach((button) => {
      const filter = button.getAttribute("data-filter");
      if (activeFilters.includes(filter)) {
        button.classList.add("border-b-2");
      } else {
        button.classList.remove("border-b-2");
      }
    });

    // Opdater "Ryd filtre"-knap
    if (activeFilters.length > 0) {
      clearButton.classList.remove("opacity-50", "pointer-events-none");
    } else {
      clearButton.classList.add("opacity-50", "pointer-events-none");
    }
  }

  // Eventlistener som lytter på om der bliver trykket på et filter
  filterButtons.forEach((button) => {
    button.addEventListener("click", () => {
      const filter = button.getAttribute("data-filter");

      if (activeFilters.includes(filter)) {
        activeFilters = activeFilters.filter((f) => f !== filter);
      } else {
        activeFilters.push(filter);
      }

      updateView();
    });
  });

  // Eventlistener som lytter på om der bliver ryddet filtre
  clearButton.addEventListener("click", () => {
    activeFilters = [];
    updateView();
  });

  // Initiel visning
  updateView();
</script>
